cmake_minimum_required(VERSION 3.1.0 FATAL_ERROR)
PROJECT(sioclient)
include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
conan_basic_setup(TARGETS)

option(BUILD_SHARED_LIBS "Build the shared library" OFF)
option(EMBED_CACERTS "Use embedded CA certificates" OFF)
option(BUILD_WITH_SSL "Enable ssl support" ON)

set(MAJOR 1)
set(MINOR 6)
set(PATCH 0)

if(NOT CMAKE_BUILD_TYPE )
MESSAGE(STATUS "not define build type, set to release" )
set(CMAKE_BUILD_TYPE Release )
elseif(NOT (${CMAKE_BUILD_TYPE} STREQUAL "Release" OR ${CMAKE_BUILD_TYPE} STREQUAL "Debug" ))
MESSAGE(SEND_ERROR "CMAKE_BUILD_TYPE must be either Release or Debug")
return()
endif()

aux_source_directory(${CMAKE_CURRENT_LIST_DIR}/src ALL_SRC)
aux_source_directory(${CMAKE_CURRENT_LIST_DIR}/src/internal ALL_SRC)
file(GLOB ALL_HEADERS ${CMAKE_CURRENT_LIST_DIR}/src/*.h )
set(SIO_INCLUDEDIR ${CMAKE_CURRENT_LIST_DIR})

if(EMBED_CACERTS)
enable_language(ASM)
if (CMAKE_SYSTEM_NAME MATCHES Darwin)
  set(CMAKE_ASM_FLAGS "${CMAKE_CXX_FLAGS} -x assembler-with-cpp")
endif()
set(ALL_SRC ${ALL_SRC} "${CMAKE_CURRENT_LIST_DIR}/src/ca_certificates.s")
endif()

add_library(sioclient ${ALL_SRC})

if(EMBED_CACERTS)
target_compile_definitions(sioclient PRIVATE SIO_EMBED_CACERTS)
endif()

if(BUILD_WITH_TLS)
target_compile_definitions(sioclient PRIVATE -DSIO_TLS)
endif()

target_include_directories(sioclient PRIVATE
    ${CMAKE_CURRENT_LIST_DIR}/src 
    ${CMAKE_CURRENT_LIST_DIR}/lib/websocketpp 
    ${CMAKE_CURRENT_LIST_DIR}/lib/rapidjson/include
)

set_property(TARGET sioclient PROPERTY CXX_STANDARD 11)
set_property(TARGET sioclient PROPERTY CXX_STANDARD_EXTENSIONS OFF)
set_property(TARGET sioclient PROPERTY CXX_STANDARD_REQUIRED ON)
target_link_libraries(sioclient PRIVATE CONAN_PKG::Boost)

if(BUILD_SHARED_LIBS)
set_target_properties(sioclient
	PROPERTIES
		SOVERSION ${MAJOR}
		VERSION ${MAJOR}.${MINOR}.${PATCH}
	)
endif()
list(APPEND TARGET_LIBRARIES sioclient)

install(DIRECTORY src
    DESTINATION "${CMAKE_CURRENT_LIST_DIR}/build/include"
    FILES_MATCHING PATTERN "*.h"
)

install(TARGETS ${TARGET_LIBRARIES}
    DESTINATION "${CMAKE_CURRENT_LIST_DIR}/build/lib/${CMAKE_BUILD_TYPE}"
)
